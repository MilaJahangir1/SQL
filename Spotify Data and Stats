# For this project, I downloaded Spotify data from Kaggle and I created a table to insert Spotify data into. Then I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Next, I inserted the Spotify Data .csv into the table.

#Then I explored the data using the following SQL. 


--Who are the top 5 artists with the highest total energy and what was the total? How popular are they?
SELECT artist_name, sum(energy) AS "total energy", popularity
FROM Spotifydata
GROUP BY artist_name
ORDER BY sum(energy) DESC
LIMIT 5;


--Which artist released the shortest song?
SELECT artist_name
FROM Spotifydata
GROUP BY artist_name
ORDER BY duration_ms ASC
LIMIT 1;

--Which artists has more than 1 song in Spotify's top 50 songs?
SELECT artist_name
FROM Spotifydata
GROUP BY artist_name
HAVING COUNT(track_name)>=2;

--How many artists have a tempo above 125?
SELECT COUNT(artist_name) as "Total Artists"
FROM Spotifydata
WHERE Tempo>125;

--How many songs have the word "you" in their title?
SELECT COUNT(track_name)AS "Total Songs"
FROM Spotifydata
WHERE track_name LIKE '%you%';
